<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxxx.crm.dao.PermissionMapper">
  <resultMap id="BaseResultMap" type="com.xxxx.crm.vo.Permission">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="role_id" property="roleId" jdbcType="INTEGER"/>
    <result column="module_id" property="moduleId" jdbcType="INTEGER"/>
    <result column="acl_value" property="aclValue" jdbcType="VARCHAR"/>
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
  </resultMap>
  <sql id="Base_Column_List">
    id
    , role_id, module_id, acl_value, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from t_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete
    from t_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xxxx.crm.vo.Permission">
    insert into t_permission (id, role_id, module_id,
                              acl_value, create_date, update_date)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{moduleId,jdbcType=INTEGER},
            #{aclValue,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xxxx.crm.vo.Permission">
    insert into t_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id
        ,
      </if>
      <if test="roleId != null">
        role_id
        ,
      </if>
      <if test="moduleId != null">
        module_id
        ,
      </if>
      <if test="aclValue != null">
        acl_value
        ,
      </if>
      <if test="createDate != null">
        create_date
        ,
      </if>
      <if test="updateDate != null">
        update_date
        ,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER}
        ,
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER}
        ,
      </if>
      <if test="moduleId != null">
        #{moduleId,jdbcType=INTEGER}
        ,
      </if>
      <if test="aclValue != null">
        #{aclValue,jdbcType=VARCHAR}
        ,
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP}
        ,
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP}
        ,
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.crm.vo.Permission">
    update t_permission
    <set>
      <if test="roleId != null">
        role_id
        =
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="moduleId != null">
        module_id
        =
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="aclValue != null">
        acl_value
        =
        #{aclValue,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date
        =
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date
        =
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.crm.vo.Permission">
    update t_permission
    set role_id     = #{roleId,jdbcType=INTEGER},
        module_id   = #{moduleId,jdbcType=INTEGER},
        acl_value   = #{aclValue,jdbcType=VARCHAR},
        create_date = #{createDate,jdbcType=TIMESTAMP},
        update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--根据roleId查询权限-->
  <select id="countPermissionByRoleId" resultType="java.lang.Integer" parameterType="int">
    select count(1)
    from t_permission
    where role_id = #{roleId}
  </select>
  <!--角色拥有权限id查询-->
  <select id="queryRoleHasModuleIdByRoleId" resultType="java.lang.Integer" parameterType="int">
    select module_id from t_permission where role_id = #{roleId}
  </select>
  <select id="queryUserHasRolePermission" resultType="java.lang.String" parameterType="int">
    select distinct p.acl_value
    from t_user_role ur left join t_permission p on ur.role_id = p.role_id
    where ur.user_id=#{userId}
  </select>
  <select id="countPermissionByModuleId" resultType="java.lang.Integer" parameterType="int">
    select count(1) from t_permission where module_id = #{mid}
  </select>
  <!--删除全部权限-->
  <delete id="deletePermissionsByRoleId" parameterType="int">
    delete
    from t_permission
    where role_id = #{roleId}
  </delete>
  <delete id="deletePermissionsByModuleId" parameterType="int">
    delete from t_permission where module_id = #{mid}
  </delete>

  <!--批量添加-->
  <insert id="insertBatch" parameterType="list">
    insert into t_permission (role_id,module_id,acl_value,
    create_date, update_date)
    values
    <foreach collection="list" item="per" separator=",">
      (#{per.roleId},#{per.moduleId},#{per.aclValue},
      #{per.createDate}, #{per.updateDate})
    </foreach>
  </insert>
</mapper>