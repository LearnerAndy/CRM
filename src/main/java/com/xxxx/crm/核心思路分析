用户登录
    1. 验证参数
        姓名 非空判断
        密码 非空判断
    2. 根据用户名，查询用户对象
    3. 判断用户是否存在
        用户对象为空，记录不存在，方法结束
    4. 用户对象不为空
        用户存在，校验密码
            密码不正确，方法结束
    5. 密码正确
        用户登录成功，返回用户的相关信息 （定义UserModel类，返回用户某些信息）

========登录功能======
前台
    1.获取用户输入的数据
    2.校验用户输入的数据
    3.发送ajax请求到后台
    4.接收后台返回的数据ResultInfo（封装UserModel，将数据存放在cookie中，保持登录状态）

后台
    1.接收参数
    2.校验参数是否为空
        如果为空，抛异常
    3.通过用户名查询数据库数据
        如果未查到，抛异常(用户不存在)
    4.校验前台传来的密码和数据库中的密码是否一致 (前台密码加密后再校验)
        如果不一致，抛异常(密码错误)
    5.封装ResultInfo对象给前台（根据前台需求：usermodel对象封装后传到前台使用）


分层思想
    controller
        1.接收参数，调用service

    service
        2.校验参数是否为空
            如果为空，抛异常
        3.调用dao层查询通过用户名查询数据库数据
            如果未查到，抛异常(用户不存在)
        4.校验前台传来的密码和数据库中的密码是否一致 (前台密码加密后再校验)
            如果不一致，抛异常(密码错误)
        5.封装ResultInfo对象给前台（根据前台需求：usermodel对象封装后传到前台使用）

    dao
        通过用户名查询数据库数据


========修改密码功能======
1.确保用户是否是登录状态获取cookie中的id 非空 查询数据库
2.校验老密码 非空  老密码必须要跟数据库中密码一致
3.新密码    非空  新密码不能和原密码一致
4.确认密码  非空  确认必须和新密码一致
5.执行修改操作，返回ResultInfo
